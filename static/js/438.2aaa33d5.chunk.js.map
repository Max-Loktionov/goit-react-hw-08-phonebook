{"version":3,"file":"static/js/438.2aaa33d5.chunk.js","mappings":"yMAwDA,UApDqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAWA,OACE,4BACE,2CACA,kBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBAEFH,EAAW,CAAEH,KAAAA,EAAMJ,MAAAA,EAAOE,SAAAA,IAC1BD,EAAS,IACTE,EAAY,IACZE,EAAQ,KAMN,WACE,SAAC,KAAD,CACEM,MAAOP,EACPQ,SAAU,SAAAH,GAAC,OAAIJ,EAAQI,EAAEI,OAAOF,QAChCG,KAAK,OACLV,KAAK,OACLW,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNC,aAAa,MACbC,UAAQ,KAEV,SAAC,KAAD,CACEL,KAAK,QACLH,MAAOX,EACPY,SAAU,SAAAH,GAAC,OAAIR,EAASQ,EAAEI,OAAOF,QACjCI,YAAY,QACZG,aAAa,MACbC,UAAQ,KAEV,SAAC,KAAD,CACEL,KAAK,WACLH,MAAOT,EACPU,SAAU,SAAAH,GAAC,OAAIN,EAAYM,EAAEI,OAAOF,QACpCI,YAAY,WACZG,aAAa,MACbC,UAAQ,KAEV,SAAC,KAAD,CAAQL,KAAK,SAAb","sources":["views/RegisterPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSignUpUserMutation } from 'redux/user/userApi';\nimport { Input, Submit } from 'components/ContactsBook/Phonebook.styled';\n\nconst RegisterView = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [signUpUser] = useSignUpUserMutation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    signUpUser({ name, email, password });\n    setEmail('');\n    setPassword('');\n    setName('');\n  };\n\n  return (\n    <div>\n      <h1>Register Page</h1>\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={name}\n          onChange={e => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n        <Input\n          type=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          placeholder=\"email\"\n          autoComplete=\"off\"\n          required\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          placeholder=\"password\"\n          autoComplete=\"off\"\n          required\n        />\n        <Submit type=\"submit\">Register</Submit>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterView;\n"],"names":["useState","email","setEmail","password","setPassword","name","setName","useSignUpUserMutation","signUpUser","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","pattern","title","autoComplete","required"],"sourceRoot":""}