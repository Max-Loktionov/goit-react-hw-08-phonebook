{"version":3,"file":"static/js/438.2b3293ae.chunk.js","mappings":"gPAgEA,UA3DqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAY,mCAAG,WAAMC,GAAN,iEACnBA,EAAEC,iBACF,IACEH,EAAW,CAAEH,KAAAA,EAAMJ,MAAAA,EAAOE,SAAAA,IAAYS,MAAK,SAAAC,IACrC,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QACJC,EAAAA,OAAAA,QAAA,qCACgCF,EAAKC,MAAME,KAAKC,QADhD,KAEE,CAAEC,QAAS,IAAMC,SAAU,YAGjC,MAAOL,GACPC,EAAAA,OAAAA,QAAA,iCAAyCD,IACzCM,QAAQC,IAAIP,GAZK,2CAAH,sDAgBlB,OACE,4BACE,2CACA,kBAAMQ,SAAUb,EAAhB,WACE,SAAC,KAAD,CACEc,MAAOlB,EACPmB,SAAU,SAAAd,GAAC,OAAIJ,EAAQI,EAAEe,OAAOF,QAChCG,KAAK,OACLrB,KAAK,OACLsB,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNC,aAAa,MACbC,UAAQ,KAEV,SAAC,KAAD,CACEL,KAAK,QACLH,MAAOtB,EACPuB,SAAU,SAAAd,GAAC,OAAIR,EAASQ,EAAEe,OAAOF,QACjCI,YAAY,QACZG,aAAa,MACbC,UAAQ,KAEV,SAAC,KAAD,CACEL,KAAK,WACLH,MAAOpB,EACPqB,SAAU,SAAAd,GAAC,OAAIN,EAAYM,EAAEe,OAAOF,QACpCI,YAAY,WACZG,aAAa,MACbC,UAAQ,KAEV,SAAC,KAAD,CAAQL,KAAK,SAAb","sources":["views/RegisterPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useSignUpUserMutation } from 'redux/user/userApi';\nimport { Input, Submit } from 'components/ContactsBook/ContactsBook.styled';\n\nconst RegisterView = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [signUpUser] = useSignUpUserMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      signUpUser({ name, email, password }).then(resp => {\n        resp?.error &&\n          Notify.failure(\n            ` Sorry, try one more time. ${resp.error.data.message} `,\n            { timeout: 8000, fontSize: '18px' }\n          );\n      });\n    } catch (error) {\n      Notify.failure(` Something goes wrong: ${error}`);\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Register Page</h1>\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={name}\n          onChange={e => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n        <Input\n          type=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          placeholder=\"email\"\n          autoComplete=\"off\"\n          required\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          placeholder=\"password\"\n          autoComplete=\"off\"\n          required\n        />\n        <Submit type=\"submit\">Register</Submit>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterView;\n"],"names":["useState","email","setEmail","password","setPassword","name","setName","useSignUpUserMutation","signUpUser","handleSubmit","e","preventDefault","then","resp","error","Notify","data","message","timeout","fontSize","console","log","onSubmit","value","onChange","target","type","placeholder","pattern","title","autoComplete","required"],"sourceRoot":""}