{"version":3,"file":"static/js/22.e96a515a.chunk.js","mappings":"wMA6CA,UAzCc,WACZ,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAoBC,EAAAA,EAAAA,MAAbC,GAAP,eAYA,OACE,kBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACFH,EAAU,CAAEL,MAAAA,EAAOE,SAAAA,IACnBD,EAAS,IACTE,EAAY,KAIZ,WACE,SAAC,KAAD,CACEM,KAAK,OACLC,MAAOV,EACPW,SAAU,SAAAJ,GAAC,OAAIN,EAASM,EAAEK,OAAOF,QACjCG,YAAY,QACZC,aAAa,MACbC,UAAQ,KAEV,SAAC,KAAD,CACEN,KAAM,WACNC,MAAOR,EACPS,SAAU,SAAAJ,GAAC,OAAIJ,EAAYI,EAAEK,OAAOF,QACpCG,YAAY,WACZC,aAAa,MACbC,UAAQ,KAMV,SAAC,KAAD,CAAQN,KAAK,SAAb","sources":["views/LogInPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { Input, Submit } from 'components/ContactsBook/Phonebook.styled';\nimport { useLogInUserMutation } from 'redux/user/userApi';\n\nconst LogIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [logInUser] = useLogInUserMutation();\n\n  // const [show, setShow] = useState(false);\n  // const handleClick = () => setShow(!show);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    logInUser({ email, password });\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        placeholder=\"email\"\n        autoComplete=\"off\"\n        required\n      />\n      <Input\n        type={'password'}\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        placeholder=\"password\"\n        autoComplete=\"off\"\n        required\n      >\n        {/* <button type=\"button\" onClick={handleClick}>\n          {show ? 'Hide' : 'Show'}\n        </button> */}\n      </Input>\n      <Submit type=\"submit\">Log In</Submit>\n    </form>\n  );\n};\nexport default LogIn;\n"],"names":["useState","email","setEmail","password","setPassword","useLogInUserMutation","logInUser","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","autoComplete","required"],"sourceRoot":""}